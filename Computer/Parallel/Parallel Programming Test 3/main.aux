\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\@writefile{toc}{\contentsline {section}{\numberline {1}What do the four parameters ($nB$, $nT$, $nS$, $Sid$) represent in kernelFunc$<<<nB,nT,nS,Sid>>>$(...)? What is the difference between the two kernels below? (no more than 100 words)}{1}{section.1}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}What is the parallel reduction? How to implement it? What is the difference between the following two programs? Which performance is better? And why? (no more than 150 words)}{2}{section.2}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(a)}{\ignorespaces {}}}{2}{subfigure.1.2}\protected@file@percent }
\@writefile{lof}{\contentsline {subfigure}{\numberline{(b)}{\ignorespaces {}}}{2}{subfigure.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}What are TLP and ILP? How to improve ILP? Why do we need to avoid writing programs that have dependencies like the below? (no more than 100 words)}{2}{section.3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}What arrays does CSR have? What other storage formats does a sparse matrix have? Please draw a 4Ã—4 dense matrix with some zeros and covert it to the CSR format. You are asked to attach a figure. (no more than 50 words)}{3}{section.4}\protected@file@percent }
\bibstyle{plain}
\@writefile{toc}{\contentsline {section}{\numberline {5}List the best speedups you observed while you compared the performance of the vector-version and the scalar-version of SpMM with CUDA. Consider your hardware environment of the machine and the size of the problem. And why is the vector-version faster than the scalar-version? If the scalar-version is faster, please analyze your performance data. (no more than 200 words)}{4}{section.5}\protected@file@percent }
\gdef \@abspage@last{5}
